<?php declare(strict_types=1);

namespace gipfl\RrdGraph\Graph\Instruction;

use gipfl\RrdGraph\DataType\BooleanType;
use gipfl\RrdGraph\DataType\IntegerType;
use gipfl\RrdGraph\Render;

/**
 * man rrdgraph_graph
 * ------------------
 * Draw a line of the specified width onto the graph. width can be a floating
 * point number. If the color is not specified, the drawing is done 'invisibly'.
 * This is useful when stacking something else on top of this line. The legend
 * string is also optional, and controls, whether this item should be shown
 * in the legend box. The value can be generated by DEF, VDEF, and CDEF.
 *
 * Synopsis
 * --------
 * LINE[width]:value[#color][:[legend][:STACK][:skipscale]
 *     [:dashes[=on_s[,off_s[,on_s,off_s]...]][:dash-offset=offset]]]
 *
 * @method static Line fromParameters(array $parameters)()
 */
class Line extends DefinitionBasedGraphInstruction
{
    use Dashes;
    use SkipScale;
    use Stack;

    const TAG = 'LINE';
    const OPTIONAL_PARAMETERS = [
        'STACK'      => BooleanType::class,
        'skipscale'  => BooleanType::class,
        'gradheight' => IntegerType::class, // TODO: Float?
    ];

    protected float $width = 1;

    public function getWidth(): float
    {
        return $this->width;
    }

    public function setWidth(float $width): self
    {
        $this->width = $width;

        return $this;
    }

    public function __toString(): string
    {
        // TODO: Figure out how to comply with this part of the man page:
        // > When you do not specify a color, you cannot specify a legend.
        // > Should you want to use STACK, use the "LINEx:<value>::STACK"
        // > form.

        return sprintf(self::TAG . '%s:', Render::float($this->getWidth()))
            . $this->definition
            . $this->color
            . Render::optionalParameter($this->legend)
            . Render::optionalNamedBoolean('STACK', $this->isStack())
            . Render::optionalNamedBoolean('skipscale', $this->isSkipScale())
            . $this->renderDashProperties();
    }
}
